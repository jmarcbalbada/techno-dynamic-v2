# Generated by Django 4.2.1 on 2024-09-26 07:25

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher')], default='student', max_length=10)),
                ('opt_in', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='files')),
            ],
        ),
        migrations.CreateModel(
            name='ImageMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_link', models.ImageField(upload_to='media')),
            ],
        ),
        migrations.CreateModel(
            name='ImageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_link', models.ImageField(upload_to='media')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessonNumber', models.IntegerField(unique=True)),
                ('title', models.CharField(default='', max_length=100)),
                ('subtitle', models.CharField(default='', max_length=300)),
                ('coverImage', models.ImageField(blank=True, upload_to='media/')),
                ('files', models.ManyToManyField(blank=True, related_name='lessons', to='api.file')),
            ],
        ),
        migrations.CreateModel(
            name='SubQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('response', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion', models.BooleanField(default=True)),
                ('threshold', models.FloatField(default=0.7)),
                ('notification_threshold', models.IntegerField(default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insights', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('old_content', models.TextField()),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BS Computer Science', 'BS Computer Science'), ('BS Information Technology', 'BS Information Technology')], max_length=50)),
                ('year', models.CharField(choices=[('1st Year', '1st Year'), ('2nd Year', '2nd Year'), ('3rd Year', '3rd Year'), ('4th Year', '4th Year')], max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RelatedContent',
            fields=[
                ('related_content_id', models.AutoField(primary_key=True, serialize=False)),
                ('general_context', models.TextField(default='')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson', to='api.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.TextField(blank=True, default='')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lesson')),
                ('subqueries', models.ManyToManyField(to='api.subquery')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notif_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('is_open', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='LessonContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contents', models.TextField(default='')),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to='media/')),
                ('images', models.ManyToManyField(blank=True, related_name='lesson_contents', to='api.imagemodel')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lesson')),
            ],
        ),
        migrations.AddField(
            model_name='imagemodel',
            name='lesson_content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lessoncontent'),
        ),
        migrations.CreateModel(
            name='GroupedQuestions',
            fields=[
                ('grouped_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('notified', models.BooleanField(default=False, null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grouped_questions', to='api.lesson')),
                ('notification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grouped_questions', to='api.notification')),
                ('related_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grouped_questions', to='api.relatedcontent')),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='lesson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lesson_files', to='api.lesson'),
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('grouped_questions', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='api.groupedquestions')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='api.lesson')),
                ('related_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='api.relatedcontent')),
            ],
        ),
        migrations.CreateModel(
            name='ContentHistory',
            fields=[
                ('historyId', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('version', models.IntegerField(default=1)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('lessonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lesson')),
            ],
            options={
                'verbose_name': 'Content History',
                'verbose_name_plural': 'Content Histories',
            },
        ),
    ]
